plugins {
	id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = project.mc_version + '-' + project.mod_version
group = 'highfox.' + project.mod_id
archivesBaseName = project.mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(project.java_version)

minecraft {
    mappings channel: 'parchment', version: '2022.10.16-1.19.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
    	client {
    		workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            
            mods {
                inventoryactions {
                    source sourceSets.main
                }
            }
    	}
    	
    	server {
    		workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            
            mods {
                inventoryactions {
                    source sourceSets.main
                }
            }
    	}
        
        data {
        	workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            
            args '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            
            mods {
                inventoryactions {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, 'inventoryactions.refmap.json'
    config 'inventoryactions.mixins.json'
}

sourceSets.main.resources { 
	srcDir 'src/generated/resources'
	exclude '.cache'
}

repositories {
}

dependencies {
    minecraft 'net.minecraftforge:forge:' + project.mc_version + '-' + project.forge_version
    
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest.attributes([
            'Specification-Title'     : project.mod_id,
            'Specification-Vendor'    : project.author,
            'Specification-Version'   : '1',
            'Implementation-Title'    : project.mod_id,
            'Implementation-Version'  : version,
            'Implementation-Vendor'   : project.author,
            'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
    
    finalizedBy 'reobfJar'
}

task apiJar(type: Jar) {
	dependsOn(classes)
	include "${project.author}/${project.mod_id}/api/**"
    from sourceSets.main.allSource
    from sourceSets.main.output
    classifier = 'api'
}

task sourcesJar(type: Jar) {
	dependsOn(classes)
	classifier = 'sources'
	from sourceSets.main.allJava
}

tasks.build.dependsOn apiJar, sourcesJar

artifacts {
	archives apiJar
	archives sourcesJar
	archives jar
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.release = 17
}
